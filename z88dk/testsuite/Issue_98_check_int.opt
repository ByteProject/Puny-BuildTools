;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 16001-8b55fd9-20200203
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Sun Dec  6 12:52:26 2020



	MODULE	Issue_98_check_int_c


	INCLUDE "z80_crt0.hdr"


	SECTION	code_compiler

; Function mul flags 0x00000200 __smallc 
; int mul(int l)
; parameter 'int l' at 2 size(2)
._mul
	pop	bc
	pop	hl
	push	hl
	push	bc
	add	hl,hl
	ret



; Function mul2 flags 0x00000200 __smallc 
; int mul2(int l)
; parameter 'int l' at 2 size(2)
._mul2
	pop	bc
	pop	hl
	push	hl
	push	bc
	add	hl,hl
	ret



; Function mul3 flags 0x00000200 __smallc 
; int mul3(int l)
; parameter 'int l' at 2 size(2)
._mul3
	ld	de,(_g)
	pop	bc
	pop	hl
	push	hl
	push	bc
	call	l_mult
	ret



; Function mul3_2 flags 0x00000200 __smallc 
; int mul3_2(int l)
; parameter 'int l' at 2 size(2)
._mul3_2
	pop	bc
	pop	hl
	push	hl
	push	bc
	ex	de,hl
	ld	hl,(_g)
	call	l_mult
	ret



; Function div flags 0x00000200 __smallc 
; int div(int l)
; parameter 'int l' at 2 size(2)
._div
	pop	bc
	pop	hl
	push	hl
	push	bc
	ld	de,2
	call	l_div
	ret



; Function div2 flags 0x00000200 __smallc 
; int div2(int l)
; parameter 'int l' at 2 size(2)
._div2
	pop	bc
	pop	hl
	push	hl
	push	bc
	bit	7,h
	jr	z,i_2
	inc	hl
.i_2
	sra	h
	rr	l
	ret



; Function div3 flags 0x00000200 __smallc 
; int div3(int l)
; parameter 'int l' at 2 size(2)
._div3
	ld	de,(_g)
	pop	bc
	pop	hl
	push	hl
	push	bc
	call	l_div
	ret



; Function add flags 0x00000200 __smallc 
; int add(int l)
; parameter 'int l' at 2 size(2)
._add
	pop	bc
	pop	hl
	push	hl
	push	bc
	inc	hl
	inc	hl
	ret



; Function add2 flags 0x00000200 __smallc 
; int add2(int l)
; parameter 'int l' at 2 size(2)
._add2
	pop	bc
	pop	hl
	push	hl
	push	bc
	inc	hl
	inc	hl
	ret



; Function sub flags 0x00000200 __smallc 
; int sub(int l)
; parameter 'int l' at 2 size(2)
._sub
	pop	bc
	pop	de
	push	de
	push	bc
	ld	hl,2
	and	a
	sbc	hl,de
	ret



; Function sub_1 flags 0x00000200 __smallc 
; int sub_1(int l)
; parameter 'int l' at 2 size(2)
._sub_1
	ld	hl,2	;const
	call	l_gintspsp	;
	ld	hl,4	;const
	add	hl,sp
	call	l_gint	;
	pop	de
	call	l_mult
	ld	de,2
	ex	de,hl
	and	a
	sbc	hl,de
	ret



; Function sub2 flags 0x00000200 __smallc 
; int sub2(int l)
; parameter 'int l' at 2 size(2)
._sub2
	pop	bc
	pop	hl
	push	hl
	push	bc
	dec	hl
	dec	hl
	ret



; Function sub2_1 flags 0x00000200 __smallc 
; int sub2_1(int l)
; parameter 'int l' at 2 size(2)
._sub2_1
	ld	hl,2	;const
	call	l_gintspsp	;
	ld	hl,4	;const
	add	hl,sp
	call	l_gint	;
	pop	de
	call	l_mult
	dec	hl
	dec	hl
	ret



; Function sub3 flags 0x00000200 __smallc 
; int sub3(int l)
; parameter 'int l' at 2 size(2)
._sub3
	ld	de,(_g)
	pop	bc
	pop	hl
	push	hl
	push	bc
	ex	de,hl
	and	a
	sbc	hl,de
	ret



; --- Start of Static Variables ---

	SECTION	bss_compiler
._g	defs	2
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_g
	GLOBAL	_mul
	GLOBAL	_mul2
	GLOBAL	_mul3
	GLOBAL	_mul3_2
	GLOBAL	_div
	GLOBAL	_div2
	GLOBAL	_div3
	GLOBAL	_add
	GLOBAL	_add2
	GLOBAL	_sub
	GLOBAL	_sub_1
	GLOBAL	_sub2
	GLOBAL	_sub2_1
	GLOBAL	_sub3


; --- End of Scope Defns ---


; --- End of Compilation ---
