;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 16001-8b55fd9-20200203
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Sun Dec  6 12:52:26 2020



	MODULE	Issue_103_double_prepost_c


	INCLUDE "z80_crt0.hdr"


	SECTION	code_compiler

; Function double_post_increment flags 0x00000200 __smallc 
; double double_post_increment()
._double_post_increment
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,1	;const
	call	l_int2long_u_float
	call	dadd
	pop	hl
	call	dstore
	call	dpush
	ld	hl,65535	;const
	ld	de,65535
	call	float
	call	dadd
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



; Function double_post_increment_assign flags 0x00000200 __smallc 
; double double_post_increment_assign()
._double_post_increment_assign
	ld	hl,i_2+0
	call	dldpsh
	push	bc
	push	bc
	push	bc
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,8	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,1	;const
	call	l_int2long_u_float
	call	dadd
	pop	hl
	call	dstore
	call	dpush
	ld	hl,65535	;const
	ld	de,65535
	call	float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,6	;const
	add	hl,sp
	call	dload
	ld	hl,12	;const
	add	hl,sp
	ld	sp,hl
	ret



; Function double_pre_increment flags 0x00000200 __smallc 
; double double_pre_increment()
._double_pre_increment
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,1	;const
	call	l_int2long_u_float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



; Function double_pre_increment_assign flags 0x00000200 __smallc 
; double double_pre_increment_assign()
._double_pre_increment_assign
	ld	hl,i_2+0
	call	dldpsh
	push	bc
	push	bc
	push	bc
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,8	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,1	;const
	call	l_int2long_u_float
	call	dadd
	pop	hl
	call	dstore
	pop	hl
	call	dstore
	ld	hl,6	;const
	add	hl,sp
	call	dload
	ld	hl,12	;const
	add	hl,sp
	ld	sp,hl
	ret



; Function double_post_decrement flags 0x00000200 __smallc 
; double double_post_decrement()
._double_post_decrement
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,65535	;const
	ld	de,65535
	call	float
	call	dadd
	pop	hl
	call	dstore
	call	dpush
	ld	hl,1	;const
	call	l_int2long_u_float
	call	dadd
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



; Function double_post_decrement_assign flags 0x00000200 __smallc 
; double double_post_decrement_assign()
._double_post_decrement_assign
	ld	hl,i_2+0
	call	dldpsh
	push	bc
	push	bc
	push	bc
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,8	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,65535	;const
	ld	de,65535
	call	float
	call	dadd
	pop	hl
	call	dstore
	call	dpush
	ld	hl,1	;const
	call	l_int2long_u_float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,6	;const
	add	hl,sp
	call	dload
	ld	hl,12	;const
	add	hl,sp
	ld	sp,hl
	ret



; Function double_pre_decrement flags 0x00000200 __smallc 
; double double_pre_decrement()
._double_pre_decrement
	ld	hl,i_2+0
	call	dldpsh
	ld	hl,0	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,65535	;const
	ld	de,65535
	call	float
	call	dadd
	pop	hl
	call	dstore
	ld	hl,0	;const
	add	hl,sp
	call	dload
	pop	bc
	pop	bc
	pop	bc
	ret



; Function double_pre_decrement_assign flags 0x00000200 __smallc 
; double double_pre_decrement_assign()
._double_pre_decrement_assign
	ld	hl,i_2+0
	call	dldpsh
	push	bc
	push	bc
	push	bc
	ld	hl,0	;const
	add	hl,sp
	push	hl
	ld	hl,8	;const
	add	hl,sp
	push	hl
	call	dldpsh
	ld	hl,65535	;const
	ld	de,65535
	call	float
	call	dadd
	pop	hl
	call	dstore
	pop	hl
	call	dstore
	ld	hl,6	;const
	add	hl,sp
	call	dload
	ld	hl,12	;const
	add	hl,sp
	ld	sp,hl
	ret


	SECTION	rodata_compiler
.i_2
	;3.000000
	defb	0x00,0x00,0x00,0x00,0x40,0x82

; --- Start of Static Variables ---

	SECTION	bss_compiler
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_double_post_increment
	GLOBAL	_double_post_increment_assign
	GLOBAL	_double_pre_increment
	GLOBAL	_double_pre_increment_assign
	GLOBAL	_double_post_decrement
	GLOBAL	_double_post_decrement_assign
	GLOBAL	_double_pre_decrement
	GLOBAL	_double_pre_decrement_assign


; --- End of Scope Defns ---


; --- End of Compilation ---
