;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 16001-8b55fd9-20200203
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Sun Dec  6 12:52:26 2020



	MODULE	Issue_98_underlying_c


	INCLUDE "z80_crt0.hdr"


	SECTION	code_compiler

; Function mul flags 0x00000200 __smallc 
; long mul(long l)
; parameter 'long l' at 2 size(4)
._mul
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret



; Function muli flags 0x00000200 __smallc 
; int muli(int l)
; parameter 'int l' at 2 size(2)
._muli
	pop	bc
	pop	hl
	push	hl
	push	bc
	add	hl,hl
	ret



; Function muli2 flags 0x00000200 __smallc 
; long muli2(long l)
; parameter 'long l' at 2 size(4)
._muli2
	ld	hl,(_k)
	push	hl
	ld	hl,4	;const
	add	hl,sp
	call	l_glong
	exx
	pop	hl
	call	l_int2long_s
	push	de
	push	hl
	exx
	call	l_long_mult
	ret



; Function mul_assign_to_int flags 0x00000200 __smallc 
; int mul_assign_to_int(long l)
; parameter 'long l' at 2 size(4)
._mul_assign_to_int
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret



; Function mul2 flags 0x00000200 __smallc 
; long mul2(long l)
; parameter 'long l' at 2 size(4)
._mul2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret



; Function div flags 0x00000200 __smallc 
; long div(long l)
; parameter 'long l' at 2 size(4)
._div
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_div
	ret



; Function div2 flags 0x00000200 __smallc 
; long div2(long l)
; parameter 'long l' at 2 size(4)
._div2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	bit	7,d
	jr	z,i_2
	call	l_inclong
.i_2
	sra	d
	rr	e
	rr	h
	rr	l
	ret



; Function div3 flags 0x00000200 __smallc 
; long div3(long l)
; parameter 'long l' at 2 size(4)
._div3
	ld	hl,(_g)
	ld	de,(_g+2)
	push	de
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_div
	ret



; Function add flags 0x00000200 __smallc 
; long add(long l)
; parameter 'long l' at 2 size(4)
._add
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	ret



; Function add2 flags 0x00000200 __smallc 
; long add2(long l)
; parameter 'long l' at 2 size(4)
._add2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	ret



; Function sub flags 0x00000200 __smallc 
; long sub(long l)
; parameter 'long l' at 2 size(4)
._sub
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_sub
	ret



; Function sub_1 flags 0x00000200 __smallc 
; long sub_1(long l)
; parameter 'long l' at 2 size(4)
._sub_1
	ld	hl,2	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_mult
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_sub
	ret



; Function sub2 flags 0x00000200 __smallc 
; long sub2(long l)
; parameter 'long l' at 2 size(4)
._sub2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	ret



; Function sub2_1 flags 0x00000200 __smallc 
; long sub2_1(long l)
; parameter 'long l' at 2 size(4)
._sub2_1
	ld	hl,2	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_mult
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	ret



; Function sub3 flags 0x00000200 __smallc 
; long sub3(long l)
; parameter 'long l' at 2 size(4)
._sub3
	ld	hl,(_g)
	ld	de,(_g+2)
	push	de
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_sub
	ret



; --- Start of Static Variables ---

	SECTION	bss_compiler
._g	defs	4
._k	defs	2
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_g
	GLOBAL	_k
	GLOBAL	_mul
	GLOBAL	_muli
	GLOBAL	_muli2
	GLOBAL	_mul_assign_to_int
	GLOBAL	_mul2
	GLOBAL	_div
	GLOBAL	_div2
	GLOBAL	_div3
	GLOBAL	_add
	GLOBAL	_add2
	GLOBAL	_sub
	GLOBAL	_sub_1
	GLOBAL	_sub2
	GLOBAL	_sub2_1
	GLOBAL	_sub3


; --- End of Scope Defns ---


; --- End of Compilation ---
