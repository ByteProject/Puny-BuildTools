
// automatically generated by m4 from headers in proto subdir


#ifndef __ADT_P_QUEUE_H__
#define __ADT_P_QUEUE_H__

#include <stddef.h>

// DATA STRUCTURES

typedef struct p_queue_s
{
   void       *head;
   void       *tail;

} p_queue_t;

extern void __LIB__ *p_queue_back(p_queue_t *q) __smallc __z88dk_fastcall;


extern void __LIB__ p_queue_clear(p_queue_t *q) __smallc __z88dk_fastcall;


extern int __LIB__ p_queue_empty(p_queue_t *q) __smallc __z88dk_fastcall;


extern void __LIB__ *p_queue_front(p_queue_t *q) __smallc __z88dk_fastcall;


extern void __LIB__ p_queue_init(void *p) __smallc __z88dk_fastcall;


extern void __LIB__ *p_queue_pop(p_queue_t *q) __smallc __z88dk_fastcall;


extern void __LIB__ p_queue_push(p_queue_t *q,void *item) __smallc;
extern void __LIB__ p_queue_push_callee(p_queue_t *q,void *item) __smallc __z88dk_callee;
#define p_queue_push(a,b) p_queue_push_callee(a,b)


extern size_t __LIB__ p_queue_size(p_queue_t *q) __smallc __z88dk_fastcall;



#endif
