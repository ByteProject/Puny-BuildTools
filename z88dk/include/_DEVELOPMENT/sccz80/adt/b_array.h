
// automatically generated by m4 from headers in proto subdir


#ifndef __ADT_B_ARRAY_H__
#define __ADT_B_ARRAY_H__

#include <stddef.h>

// DATA STRUCTURES

typedef struct b_array_s
{

   void       *data;
   size_t      size;
   size_t      capacity;

} b_array_t;

extern size_t __LIB__ b_array_append(b_array_t *a,int c) __smallc;
extern size_t __LIB__ b_array_append_callee(b_array_t *a,int c) __smallc __z88dk_callee;
#define b_array_append(a,b) b_array_append_callee(a,b)


extern void __LIB__ *b_array_append_block(b_array_t *a,size_t n) __smallc;
extern void __LIB__ *b_array_append_block_callee(b_array_t *a,size_t n) __smallc __z88dk_callee;
#define b_array_append_block(a,b) b_array_append_block_callee(a,b)


extern size_t __LIB__ b_array_append_n(b_array_t *a,size_t n,int c) __smallc;
extern size_t __LIB__ b_array_append_n_callee(b_array_t *a,size_t n,int c) __smallc __z88dk_callee;
#define b_array_append_n(a,b,c) b_array_append_n_callee(a,b,c)


extern int __LIB__ b_array_at(b_array_t *a,size_t idx) __smallc;
extern int __LIB__ b_array_at_callee(b_array_t *a,size_t idx) __smallc __z88dk_callee;
#define b_array_at(a,b) b_array_at_callee(a,b)


extern int __LIB__ b_array_back(b_array_t *a) __smallc __z88dk_fastcall;


extern size_t __LIB__ b_array_capacity(b_array_t *a) __smallc __z88dk_fastcall;


extern void __LIB__ b_array_clear(b_array_t *a) __smallc __z88dk_fastcall;


extern void __LIB__ *b_array_data(b_array_t *a) __smallc __z88dk_fastcall;


extern void __LIB__ b_array_destroy(b_array_t *a) __smallc __z88dk_fastcall;


extern int __LIB__ b_array_empty(b_array_t *a) __smallc __z88dk_fastcall;


extern size_t __LIB__ b_array_erase(b_array_t *a,size_t idx) __smallc;
extern size_t __LIB__ b_array_erase_callee(b_array_t *a,size_t idx) __smallc __z88dk_callee;
#define b_array_erase(a,b) b_array_erase_callee(a,b)


extern size_t __LIB__ b_array_erase_block(b_array_t *a,size_t idx,size_t n) __smallc;
extern size_t __LIB__ b_array_erase_block_callee(b_array_t *a,size_t idx,size_t n) __smallc __z88dk_callee;
#define b_array_erase_block(a,b,c) b_array_erase_block_callee(a,b,c)


extern size_t __LIB__ b_array_erase_range(b_array_t *a,size_t idx_first,size_t idx_last) __smallc;
extern size_t __LIB__ b_array_erase_range_callee(b_array_t *a,size_t idx_first,size_t idx_last) __smallc __z88dk_callee;
#define b_array_erase_range(a,b,c) b_array_erase_range_callee(a,b,c)


extern int __LIB__ b_array_front(b_array_t *a) __smallc __z88dk_fastcall;


extern b_array_t __LIB__ *b_array_init(void *p,void *data,size_t capacity) __smallc;
extern b_array_t __LIB__ *b_array_init_callee(void *p,void *data,size_t capacity) __smallc __z88dk_callee;
#define b_array_init(a,b,c) b_array_init_callee(a,b,c)


extern size_t __LIB__ b_array_insert(b_array_t *a,size_t idx,int c) __smallc;
extern size_t __LIB__ b_array_insert_callee(b_array_t *a,size_t idx,int c) __smallc __z88dk_callee;
#define b_array_insert(a,b,c) b_array_insert_callee(a,b,c)


extern void __LIB__ *b_array_insert_block(b_array_t *a,size_t idx,size_t n) __smallc;
extern void __LIB__ *b_array_insert_block_callee(b_array_t *a,size_t idx,size_t n) __smallc __z88dk_callee;
#define b_array_insert_block(a,b,c) b_array_insert_block_callee(a,b,c)


extern size_t __LIB__ b_array_insert_n(b_array_t *a,size_t idx,size_t n,int c) __smallc;
extern size_t __LIB__ b_array_insert_n_callee(b_array_t *a,size_t idx,size_t n,int c) __smallc __z88dk_callee;
#define b_array_insert_n(a,b,c,d) b_array_insert_n_callee(a,b,c,d)


extern int __LIB__ b_array_pop_back(b_array_t *a) __smallc __z88dk_fastcall;


extern size_t __LIB__ b_array_push_back(b_array_t *a,int c) __smallc;
extern size_t __LIB__ b_array_push_back_callee(b_array_t *a,int c) __smallc __z88dk_callee;
#define b_array_push_back(a,b) b_array_push_back_callee(a,b)


extern size_t __LIB__ b_array_read_block(void *dst,size_t n,b_array_t *a,size_t idx) __smallc;
extern size_t __LIB__ b_array_read_block_callee(void *dst,size_t n,b_array_t *a,size_t idx) __smallc __z88dk_callee;
#define b_array_read_block(a,b,c,d) b_array_read_block_callee(a,b,c,d)


extern int __LIB__ b_array_resize(b_array_t *a,size_t n) __smallc;
extern int __LIB__ b_array_resize_callee(b_array_t *a,size_t n) __smallc __z88dk_callee;
#define b_array_resize(a,b) b_array_resize_callee(a,b)


extern size_t __LIB__ b_array_size(b_array_t *a) __smallc __z88dk_fastcall;


extern size_t __LIB__ b_array_write_block(void *src,size_t n,b_array_t *a,size_t idx) __smallc;
extern size_t __LIB__ b_array_write_block_callee(void *src,size_t n,b_array_t *a,size_t idx) __smallc __z88dk_callee;
#define b_array_write_block(a,b,c,d) b_array_write_block_callee(a,b,c,d)



#endif
